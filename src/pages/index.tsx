import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Avatar from "react-avatar";
import { useState } from "react";
import Head from "next/head";
// import Image from "next/image";

import { api } from "~/utils/api";
import { LoadingPage } from "~/components/loading";
import { Sidebar } from "~/components/home/sidebar";
import { Header } from "~/components/home/header";
import Link from "next/link";

export interface SidebarProps {
  isCollapsed: boolean;
  toggleSidebar: () => void;
}

const AllBases = () => {
  const { data, isLoading: basesLoading } = api.base.getAll.useQuery();

  if (basesLoading) {
    return <LoadingPage />;
  }

  if (!data) return <div>Something went wrong</div>;

  return data && data.length > 0 ? (
    <div className={`mt-4 flex flex-wrap gap-4 p-2`}>
      {data.map((base) => (
        <Link
          href={`/base/${base.id}`}
          key={base.id}
          className="flex h-24 w-80 items-center rounded-md bg-gray-100 p-3 outline outline-1 outline-gray-300"
        >
          <Avatar
            name={`${base.name}`}
            size="50"
            textSizeRatio={2.75}
            round={"25%"}
            fgColor="#E5E7EB"
          />
          <div className="ml-3 flex flex-col">
            <div className="pt-2 text-sm">{base.name}</div>
            <div className="w-4 pt-2 text-sm font-light text-gray-500">
              {base.type}
            </div>
          </div>
        </Link>
      ))}
    </div>
  ) : (
    <div className="text-center text-gray-500">No bases created</div>
  );
};

export const Body = () => {
  return (
    <div className="flex flex-col">
      <div className="ml-3 mt-6 text-3xl">Home</div>
      <div className={`mt-4 flex flex-wrap gap-4 p-2`}>
        <div className="flex h-24 w-64 flex-col rounded-md bg-gray-100 p-3 outline outline-1 outline-gray-300">
          <div>Start with AI</div>
          <div className="text-sm font-light text-gray-500">
            Turn your process into an app with data and interfaces using AI.
          </div>
        </div>

        <div className="flex h-24 w-64 flex-col rounded-md bg-gray-100 p-3 outline outline-1 outline-gray-300">
          <div>Start with templates</div>
          <div className="text-sm font-light text-gray-500">
            Select a template to get started and customize as you go.
          </div>
        </div>

        <div className="flex h-24 w-64 flex-col rounded-md bg-gray-100 p-3 outline outline-1 outline-gray-300">
          <div>Quickly Upload</div>
          <div className="text-sm font-light text-gray-500">
            Easily migrate your existing projects in just a few minutes.
          </div>
        </div>

        <div className="flex h-24 w-64 flex-col rounded-md bg-gray-100 p-3 outline outline-1 outline-gray-300">
          <div>Start from scratch</div>
          <div className="text-sm font-light text-gray-500">
            Create a new blank base with custom tables, fields, and views.
          </div>
        </div>
      </div>
      <div className="ml-2 mt-6 text-3xl">Bases</div>
      <div aria-label="bases">
        <AllBases />
      </div>
    </div>
  );
};

export default function Home() {
  const { isLoaded: userLoaded, isSignedIn } = useUser();
  const [isCollapsed, setIsCollapsed] = useState(false);

  const toggleSidebar = () => setIsCollapsed(!isCollapsed);
  // start fetching to use cached data
  api.base.getAll.useQuery();

  if (!userLoaded) {
    return <div />;
  }

  return (
    <>
      <Head>
        <title>Airtable Clone Home Page</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet"
        />
      </Head>
      <main className="flex">
        <div className="flex flex-row">
          <div className="fixed h-14 w-full border-b border-gray-300 bg-gray-100 p-2">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />{" "}
              </div>
            )}
            {isSignedIn && (
              <div>
                <Header
                  isCollapsed={isCollapsed}
                  toggleSidebar={toggleSidebar}
                />
              </div>
            )}
          </div>
        </div>

        <div className="flex flex-row">
          <div className="fixed mt-14 bg-gray-100">
            <Sidebar isCollapsed={isCollapsed} toggleSidebar={toggleSidebar} />
          </div>
          <div
            className={`mt-14 transition-all duration-300 ${isCollapsed ? "ml-20" : "ml-80"}`}
          >
            <Body />
          </div>
        </div>
      </main>
    </>
  );
}
